# .NET Core
project.lock.json
.project.json
.ionide

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/
[Oo]ut/
msbuild.log
msbuild.err
msbuild.wrn

# Visual Studio 2015 / Visual Studio 2017
.vs/
.vscode/
*.jfm
*.dbmdl
*.pfx
*.publishsettings

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Use Razer
*.cshtml.cs
*.vbhtml.vb

# Tools
*.resharper

# Backup & report files from converting an old project file to a newer
# Visual Studio version. Backup files are not needed, because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx

# Others
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
/node_modules/
**/wwwroot/lib/

# RIA/Silverlight projects
Generated_Code/

# Backup files
*.bak

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# Including strong name files can present a security risk 
# (https://github.com/dotnet/corefx/blob/master/Documentation/project-docs/strong-name-signing.md)
*.snk

# JetBrains Rider
.idea/
*.sln.iml

# Env files
.env